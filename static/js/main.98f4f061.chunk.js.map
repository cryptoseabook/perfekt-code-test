{"version":3,"sources":["actions/index.js","actions/types.js","MessageForm.js","Message.js","EditComponent.js","MessageList.js","App.js","reducers/messageReducer.js","index.js"],"names":["deleteMessage","id","type","updateMessage","message","MessageForm","handleSubmit","e","preventDefault","_this","getMessage","value","data","Date","getTime","toString","editing","props","createAMessage","_this2","this","react_default","a","createElement","onSubmit","required","ref","input","placeholder","Component","connect","state","dispatch","_createAMessage","Object","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","post","concat","sent","console","log","stop","_x","apply","arguments","Message","handleDelete","deleteAMessage","handleEdit","onClick","_deleteAMessage","delete","EditComponent","handleUpdate","newMessage","updateAMessage","key","defaultValue","_updateAMessage","put","_x2","MessageList","fetchMessages","messages","map","src_EditComponent","src_Message","_fetchMessages","get","App","className","src_MessageForm","src_MessageList","initState","messageReducer","length","undefined","action","objectSpread","toConsumableArray","filter","copyState","JSON","parse","stringify","foundMessage","copyState1","foundMessage2","store","createStore","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.98f4f061.chunk.js","sourcesContent":["import { ADD_MESSAGE, DELETE_MESSAGE, FETCH_MESSAGE, UPDATE_MESSAGE } from './types';\n\nexport const createMessage = (data) => {\n  return {\n    type: ADD_MESSAGE,\n    data\n  }\n};\n\nexport const deleteMessage = id => {\n  return {\n    type: DELETE_MESSAGE,\n    id\n  }\n};\n\nexport const fetchAllMessages = (messages) => {\n  return {\n    type: FETCH_MESSAGE,\n    messages\n  }\n};\n\n\nexport const updateMessage = (id, message) => {\n  return {\n    type: UPDATE_MESSAGE,\n    id,\n    message\n  }\n};\n","export const FETCH_MESSAGE = 'FETCH_MESSAGE';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nexport const UPDATE_MESSAGE = 'UPDATE_MESSAGE';\nexport const DELETE_MESSAGE = 'DELETE_MESSAGE';\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { createMessage } from './actions/index';\n\nimport axios from 'axios';\nconst apiUrl = 'http://localhost:3000/messages';\n\nclass MessageForm extends Component {\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const message =  this.getMessage.value;\n        const data = {\n            id: new Date().getTime().toString(),\n            message,\n            editing:false\n        }\n        this.props.createAMessage(data)\n        this.getMessage.value = '';\n    }\n    render() {\n        return (\n            <div>\n                <h1>Create A Message</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <input required type=\"text\" ref={(input)=>this.getMessage = input} placeholder=\"Enter Your Message\" /><br /><br />\n                    <button>Add</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createAMessage: async (message) => {\n      let response =  await axios.post(`${apiUrl}`, message)\n      console.log(message, response.data)\n      dispatch(createMessage(message))\n    }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MessageForm);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { deleteMessage } from './actions/index';\n\nimport axios from 'axios';\nconst apiUrl = 'http://localhost:3000/messages';\n\nclass Message extends Component {\n  handleDelete = () => {\n    console.log('handleDelete')\n    let id = this.props.message.id\n    this.props.deleteAMessage(id)\n  }\n  handleEdit = () => {\n    console.log('handleEdit')\n    let id = this.props.message.id\n    this.props.handleEdit(id)\n  }\n  render() {\n  return (\n    <div>\n      <p>{this.props.message.message}</p>\n      <button onClick={this.handleEdit}>Edit</button> &nbsp;\n      <button onClick={this.handleDelete}>\n      Delete</button>\n    </div>\n  );\n }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteAMessage: async (id) => {\n      await axios.delete(`${apiUrl}/${id}`)\n      dispatch(deleteMessage(id))\n    },\n    handleEdit: (id) => {\n      dispatch({type:'EDIT_MESSAGE', id: id})\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Message);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateMessage } from './actions/index';\n\nimport axios from 'axios';\nconst apiUrl = 'http://localhost:3000/messages';\n\n\nclass EditComponent extends Component {\n  handleUpdate = (e) => {\n    e.preventDefault();\n    const newMessage = this.getMessage.value;\n    const id = this.props.message.id\n    const data = {\n      message: newMessage\n    }\n    this.props.updateAMessage(id, data)\n  }\n  render() {\n    return (\n    <div key={this.props.message.id}>\n      <form onSubmit={this.handleUpdate}>\n        <input required type=\"text\" ref={(input) => this.getMessage = input}\n        defaultValue={this.props.message.message} placeholder=\"Enter Message\" /><br /><br />\n        <button>Update</button>\n      </form>\n    </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateAMessage: async (id, data) => {\n      await axios.put(`${apiUrl}/${id}`, data)\n      dispatch(updateMessage(id, data.message))\n    }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(EditComponent);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Message from './Message';\nimport EditComponent from './EditComponent';\n\nimport { fetchAllMessages } from './actions/index';\n\nimport axios from 'axios';\nconst apiUrl = 'http://localhost:3000/messages';\n\nclass MessageList extends Component {\n  componentDidMount() {\n    this.props.fetchMessages()\n  }\n  render() {\n    return (\n    <div>\n      <h1>All Messages</h1>\n      {this.props.messages.map((message) => (\n            <div key={message.id}>\n                {message.editing ? <EditComponent message={message} key={message.id} /> :\n                    <Message key={message.id} message={message} />}\n            </div>\n        ))}\n    </div>\n    );\n   }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        messages: state.messages\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchMessages: async () => {\n      let response =  await axios.get(`${apiUrl}`)\n      dispatch(fetchAllMessages(response.data))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageList);\n","import React, { Component } from 'react';\nimport MessageForm from './MessageForm';\nimport MessageList from './MessageList';\n\n\nclass App extends Component {\n  render() {\n    return (\n    <div className=\"App\">\n        <h1>Perfekt Coding Test</h1>\n        <MessageForm />\n        <MessageList />\n    </div>\n    );\n    }\n  }\nexport default App;\n","import { ADD_MESSAGE, DELETE_MESSAGE, FETCH_MESSAGE, UPDATE_MESSAGE } from '../actions/types';\n\nconst initState = {\n  messages: []\n}\n\nconst messageReducer = (state = initState, action) => {\n  console.log(action.type)\n  switch (action.type) {\n    case FETCH_MESSAGE:\n      return {\n        ...state,\n        messages: [...action.messages]\n      }\n    case ADD_MESSAGE:\n      return {\n        ...state,\n        messages: [...state.messages, action.data]\n      }\n    case DELETE_MESSAGE:\n      return {\n        ...state,\n        messages: [...state.messages.filter((message) => message.id !== action.id)]\n      }\n    case 'EDIT_MESSAGE':\n      var copyState = JSON.parse(JSON.stringify( state ));\n      let foundMessage = [...copyState.messages.filter((message) => message.id === action.id)][0]\n      foundMessage.editing = !foundMessage.editing\n      return copyState\n    case UPDATE_MESSAGE:\n      let copyState1 = JSON.parse(JSON.stringify( state ));\n      let foundMessage2 = [...copyState1.messages.filter((message) => message.id === action.id)][0]\n      foundMessage2.editing = !foundMessage2.editing\n      foundMessage2.message = action.message\n      return copyState1\n    default:\n      return state;\n  }\n}\nexport default messageReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore } from 'redux';\n\nimport { Provider } from 'react-redux';\n\nimport messageReducer from './reducers/messageReducer';\n\nconst store = createStore(messageReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}