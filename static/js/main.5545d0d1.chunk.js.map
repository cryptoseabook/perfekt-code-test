{"version":3,"sources":["actions/index.js","actions/types.js","MessageForm.js","Message.js","EditComponent.js","MessageList.js","App.js","reducers/messageReducer.js","index.js"],"names":["apiUrl","createMessageSuccess","data","type","deleteMessageSuccess","id","fetchAllMessagesSuccess","messages","updateMessageSuccess","message","MessageForm","handleSubmit","e","preventDefault","_this","getMessage","value","Date","getTime","toString","editing","props","createAMessage","_this2","this","react_default","a","createElement","onSubmit","required","ref","input","placeholder","Component","connect","state","dispatch","axios","post","concat","then","res","catch","err","Message","handleDelete","console","log","deleteAMessage","handleEdit","onClick","delete","deleteMessage","EditComponent","handleUpdate","newMessage","updateAMessage","key","className","defaultValue","put","updateMessage","MessageList","fetchMessages","map","src_EditComponent","src_Message","get","App","src_MessageForm","src_MessageList","initState","messageReducer","arguments","length","undefined","action","Object","objectSpread","toConsumableArray","filter","copyState","JSON","parse","stringify","foundMessage","copyState1","foundMessage2","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5545d0d1.chunk.js","sourcesContent":["import { ADD_MESSAGE, DELETE_MESSAGE, FETCH_MESSAGE, UPDATE_MESSAGE } from './types';\n\nimport axios from 'axios';\nconst apiUrl = 'http://localhost:3000/messages';\n\nexport const createMessage = (data) => {\n  return dispatch => {\n    axios.post(`${apiUrl}`, data).then(res => {\n      dispatch(createMessageSuccess(data));\n    }).catch(err => {\n      // dispatch(createMessageFailure(res.data));\n    })\n  }\n};\n\nconst createMessageSuccess = (data) => {\n  return {\n    type: ADD_MESSAGE,\n    data\n  }\n}\n\nexport const deleteMessage = (id) => {\n  return dispatch => {\n    axios.delete(`${apiUrl}/${id}`).then(res => {\n      dispatch(deleteMessageSuccess(id));\n    }).catch(err => {\n      // dispatch(createMessageFailure(res.data));\n    })\n  }\n};\n\nconst deleteMessageSuccess = id => {\n  return {\n    type: DELETE_MESSAGE,\n    id\n  }\n};\n\nexport const fetchAllMessages = () => {\n  return dispatch => {\n    axios.get(`${apiUrl}/`).then(res => {\n      dispatch(fetchAllMessagesSuccess(res.data));\n    }).catch(err => {\n      // dispatch(createMessageFailure(res.data));\n    })\n  }\n};\n\nexport const fetchAllMessagesSuccess = (messages) => {\n  return {\n    type: FETCH_MESSAGE,\n    messages\n  }\n};\n\nexport const updateMessage = (id, newMessage) => {\n  return dispatch => {\n    axios.put(`${apiUrl}/${id}`).then(res => {\n      dispatch(updateMessageSuccess(id, newMessage));\n    }).catch(err => {\n      // dispatch(createMessageFailure(res.data));\n    })\n  }\n};\n\n\nexport const updateMessageSuccess = (id, message) => {\n  return {\n    type: UPDATE_MESSAGE,\n    id,\n    message\n  }\n};\n","export const FETCH_MESSAGE = 'FETCH_MESSAGE';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nexport const UPDATE_MESSAGE = 'UPDATE_MESSAGE';\nexport const DELETE_MESSAGE = 'DELETE_MESSAGE';\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { createMessage } from './actions/index';\n\nclass MessageForm extends Component {\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const message =  this.getMessage.value;\n        const data = {\n            id: new Date().getTime().toString(),\n            message,\n            editing:false\n        }\n        this.props.createAMessage(data)\n        this.getMessage.value = '';\n    }\n    render() {\n        return (\n            <div>\n                <h1>Create A Message</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <input required type=\"text\" ref={(input)=>this.getMessage = input} placeholder=\"Enter Your Message\" /><br /><br />\n                    <button>Add</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createAMessage: (message) => {\n      dispatch(createMessage(message))\n    }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MessageForm);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { deleteMessage } from './actions/index';\n\nclass Message extends Component {\n  handleDelete = () => {\n    console.log('handleDelete')\n    let id = this.props.message.id\n    this.props.deleteAMessage(id)\n  }\n  handleEdit = () => {\n    console.log('handleEdit')\n    let id = this.props.message.id\n    this.props.handleEdit(id)\n  }\n  render() {\n  return (\n    <div>\n      <p>{this.props.message.message}</p>\n      <button onClick={this.handleEdit}>Edit</button> &nbsp;\n      <button onClick={this.handleDelete}>\n      Delete</button>\n    </div>\n  );\n }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteAMessage: (id) => {\n      dispatch(deleteMessage(id))\n    },\n    handleEdit: (id) => {\n      dispatch({type:'EDIT_MESSAGE', id: id})\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Message);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateMessage } from './actions/index';\n\nclass EditComponent extends Component {\n  handleUpdate = (e) => {\n    e.preventDefault();\n    const newMessage = this.getMessage.value;\n    const id = this.props.message.id\n    const data = {\n      message: newMessage\n    }\n    this.props.updateAMessage(id, data)\n  }\n  render() {\n    return (\n    <div key={this.props.message.id} className=\"update-form\">\n      <form onSubmit={this.handleUpdate}>\n        <input required type=\"text\" ref={(input) => this.getMessage = input}\n        defaultValue={this.props.message.message} placeholder=\"Enter Message\" /><br /><br />\n        <button>Update</button>\n      </form>\n    </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateAMessage: (id, data) => {\n      dispatch(updateMessage(id, data.message))\n    }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(EditComponent);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Message from './Message';\nimport EditComponent from './EditComponent';\n\nimport { fetchAllMessages } from './actions/index';\n\nclass MessageList extends Component {\n  componentDidMount() {\n    this.props.fetchMessages()\n  }\n  render() {\n    return (\n    <div>\n      <h1>All Messages</h1>\n      {this.props.messages.map((message) => (\n            <div key={message.id}>\n                {message.editing ? <EditComponent message={message} key={message.id} /> :\n                    <Message key={message.id} message={message} />}\n            </div>\n        ))}\n    </div>\n    );\n   }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        messages: state.messages\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchMessages: () => {\n      dispatch(fetchAllMessages())\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageList);\n","import React, { Component } from 'react';\nimport MessageForm from './MessageForm';\nimport MessageList from './MessageList';\n\n\nclass App extends Component {\n  render() {\n    return (\n    <div className=\"App\">\n        <h1>Perfekt Coding Test</h1>\n        <MessageForm />\n        <MessageList />\n    </div>\n    );\n    }\n  }\nexport default App;\n","import { ADD_MESSAGE, DELETE_MESSAGE, FETCH_MESSAGE, UPDATE_MESSAGE } from '../actions/types';\n\nconst initState = {\n  messages: []\n}\n\nconst messageReducer = (state = initState, action) => {\n  console.log(action.type)\n  switch (action.type) {\n    case FETCH_MESSAGE:\n      return {\n        ...state,\n        messages: [...action.messages]\n      }\n    case ADD_MESSAGE:\n      return {\n        ...state,\n        messages: [...state.messages, action.data]\n      }\n    case DELETE_MESSAGE:\n      return {\n        ...state,\n        messages: [...state.messages.filter((message) => message.id !== action.id)]\n      }\n    case 'EDIT_MESSAGE':\n      var copyState = JSON.parse(JSON.stringify( state ));\n      let foundMessage = [...copyState.messages.filter((message) => message.id === action.id)][0]\n      foundMessage.editing = !foundMessage.editing\n      return copyState\n    case UPDATE_MESSAGE:\n      let copyState1 = JSON.parse(JSON.stringify( state ));\n      let foundMessage2 = [...copyState1.messages.filter((message) => message.id === action.id)][0]\n      foundMessage2.editing = !foundMessage2.editing\n      foundMessage2.message = action.message\n      return copyState1\n    default:\n      return state;\n  }\n}\nexport default messageReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\n\nimport messageReducer from './reducers/messageReducer';\n\nconst store = createStore(messageReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}